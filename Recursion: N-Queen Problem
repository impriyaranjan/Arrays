public class NQueenProblem
{
    public static void main(String[] args)
    {   int n=6;
        int[][] chess=new int[n][n];
        printNQueen(chess,0,"");
    }
    static void printNQueen(int[][] chess,int row,String qsf)
    {   if(row==chess.length)
        {   System.out.println("{"+qsf+"}");
            return;
        }
        for(int col=0;col<chess.length;col++)
        { if(isItSafePlaceForNQueen(chess,row,col)==true)
          {  chess[row][col]=1;
            printNQueen(chess,row+1, qsf+"("+row+","+col+"),");
            chess[row][col]=0;
          }
        }
    }
    static boolean isItSafePlaceForNQueen(int[][] chess,int row,int col)
    {  for(int i=row-1,j=col;i>=0 && j>=0;i--)  //vertical queen check;
        {   if(chess[i][j]==1) 
               { return false;} 
        }   
       for(int i=row-1,j=col-1;i>=0 && j>=0;i--,j--)  //left diagonal queen check;
        {   if(chess[i][j]==1) 
                {return false; }
        }
       for(int i=row-1,j=col+1;i>=0 && j<chess.length;i--,j++)  //Right diagonal queen check;
       {    if(chess[i][j]==1)  
             {  return false;}
       }
       return true;
    }
}
